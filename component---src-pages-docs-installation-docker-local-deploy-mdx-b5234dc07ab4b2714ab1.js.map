{"version":3,"sources":["webpack:///./src/pages/docs/installation/docker-local-deploy.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","isMDXComponent"],"mappings":"0PAMaA,G,UAAe,S,qOAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,iBAAQ,CACN,GAAM,8BADR,8BAGA,oIACE,yBAAgB,CACd,WAAc,KADhB,kBADF,oKAKA,iBAAQ,CACN,GAAM,uDADR,uDAGA,iCACA,qBAAG,gBAAO,CACN,KAAQ,kDACR,WAAc,KAFf,0BAAH,8DAKE,yBAAgB,CACd,WAAc,KADhB,kBALF,oBASA,6PACA,+BACA,qBAAG,gBAAO,CACN,KAAQ,0CACR,WAAc,KAFf,2BAAH,wFAKE,yBAAgB,CACd,WAAc,KADhB,kBALF,mHAUE,gBAAO,CACL,KAAQ,2CACR,WAAc,KAFhB,4CAVF,eAeA,iCACA,sGACE,gBAAO,CACL,KAAQ,8BACR,WAAc,KAFhB,cADF,iSAOA,iBAAQ,CACN,GAAM,uCADR,yCAGA,qBAAG,gBAAO,CACN,KAAQ,+CACR,WAAc,KAFf,yBAAH,iDAKA,uBAAK,mBAAU,CACX,UAAa,gBACb,WAAc,OAFb,mEAKL,uFACE,yBAAgB,CACd,WAAc,KADhB,sBADF,uCAMA,iBAAQ,CACN,GAAM,2CADR,0BAGE,yBAAgB,CACd,WAAc,MADhB,sBAGF,8BACE,yBAAgB,CACd,WAAc,KADhB,MADF,2CAKA,uBAAK,mBAAU,CACX,UAAa,gBACb,WAAc,OAFb,8BAKL,iFACA,uBAAK,mBAAU,CACX,UAAa,gBACb,WAAc,OAFb,0BAKL,+NAGA,iBAAQ,CACN,GAAM,wBADR,yBAGA,oPAEE,yBAAgB,CACd,WAAc,KADhB,yBAFF,4CAME,yBAAgB,CACd,WAAc,KADhB,SANF,yDAWE,yBAAgB,CACd,WAAc,KADhB,QAXF,KAeA,uEACA,uBAAK,mBAAU,CACX,UAAa,gBACb,WAAc,OAFb,sBAKL,uBAAK,mBAAU,CACX,UAAa,gBACb,WAAc,OAFb,uBAKL,0I,mOAKJH,EAAWI,gBAAiB","file":"component---src-pages-docs-installation-docker-local-deploy-mdx-b5234dc07ab4b2714ab1.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/pkd/Desktop/incubator-superset-site/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2 {...{\n      \"id\": \"deploy-locally-with-docker\"\n    }}>{`Deploy Locally with Docker`}</h2>\n    <p>{`To get you started on trying out Superset locally, currently the best-supported method is via Docker, using `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`docker-compose`}</inlineCode>\n      {`. Superset does not have official support for Windows, so we have provided a VM workaround below. (We will update this documentation once Windows is supported.)`}</p>\n    <h3 {...{\n      \"id\": \"step-0---install-a-docker-engine-and-docker-compose\"\n    }}>{`Step 0 - Install a Docker Engine and Docker Compose`}</h3>\n    <p>{`Mac OSX:`}</p>\n    <p><a {...{\n        \"href\": \"https://docs.docker.com/docker-for-mac/install/\",\n        \"parentName\": \"p\"\n      }}>{`Install Docker for Mac`}</a>\n      {`, which includes the Docker engine and a recent version of `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`docker-compose`}</inlineCode>\n      {` out of the box.`}</p>\n    <p>{`Once you have Docker for Mac installed, open up the preferences pane for Docker, go to the \"Resources\" section and increase the allocated memory to 6GB. With only the 2GB of RAM allocated by default, Superset will fail to start.`}</p>\n    <p>{`Linux:`}</p>\n    <p><a {...{\n        \"href\": \"https://docs.docker.com/engine/install/\",\n        \"parentName\": \"p\"\n      }}>{`Install Docker on Linux`}</a>\n      {` by following Dockerâ€™s instructions for whichever flavor of Linux suits you. Because `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`docker-compose`}</inlineCode>\n      {` is not installed as part of the base Docker installation on Linux, once you have a working engine, follow the\n`}\n      <a {...{\n        \"href\": \"https://docs.docker.com/compose/install/\",\n        \"parentName\": \"p\"\n      }}>{`docker-compose installation instructions`}</a>\n      {` for Linux.`}</p>\n    <p>{`Windows:`}</p>\n    <p>{`For Windows users, the best option may be to install an Ubuntu Desktop VM via `}\n      <a {...{\n        \"href\": \"https://www.virtualbox.org/\",\n        \"parentName\": \"p\"\n      }}>{`VirtualBox`}</a>\n      {` and proceed with the Docker on Linux instructions inside of that VM. It is recommended to assign at least 8GB of RAM to the virtual machine\nas well as provisioning a hard drive of at least 40GB, so that there will be enough space for both the OS and all of the required dependencies.`}</p>\n    <h3 {...{\n      \"id\": \"1-clone-supersets-github-repository\"\n    }}>{`1. Clone Superset's Github repository`}</h3>\n    <p><a {...{\n        \"href\": \"https://github.com/apache/incubator-superset\",\n        \"parentName\": \"p\"\n      }}>{`Clone Superset's repo`}</a>\n      {` in your terminal with the following command:`}</p>\n    <pre><code {...{\n        \"className\": \"language-bash\",\n        \"parentName\": \"pre\"\n      }}>{`$ git clone https://github.com/apache/incubator-superset.git\n`}</code></pre>\n    <p>{`Once that command completes successfully, you should see a new `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`incubator-superset`}</inlineCode>\n      {`\nfolder in your current directory.`}</p>\n    <h3 {...{\n      \"id\": \"2-launch-superset-via-docker-compose-up\"\n    }}>{`2. Launch Superset via `}\n      <inlineCode {...{\n        \"parentName\": \"h3\"\n      }}>{`docker-compose up`}</inlineCode></h3>\n    <p>{`Next, `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`cd`}</inlineCode>\n      {` into the folder you created in Step 1:`}</p>\n    <pre><code {...{\n        \"className\": \"language-bash\",\n        \"parentName\": \"pre\"\n      }}>{`$ cd incubator-superset\n`}</code></pre>\n    <p>{`Once you're in the directory, run the following command:`}</p>\n    <pre><code {...{\n        \"className\": \"language-bash\",\n        \"parentName\": \"pre\"\n      }}>{`$ docker-compose up\n`}</code></pre>\n    <p>{`You should see a wall of logging output from the containers being launched on your\nmachine. Once this output slows to a crawl, you should have a running\ninstance of Superset on your local machine!`}</p>\n    <h3 {...{\n      \"id\": \"3-log-in-to-superset\"\n    }}>{`3. Log In to Superset`}</h3>\n    <p>{`Your Superset local instance also includes a Postgres server to store your data and is already pre-loaded with some example datasets that ship with Superset. You can access Superset now via your web browser by visiting\n`}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`http://localhost:8088`}</inlineCode>\n      {`. Note that many browsers now default to `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`https`}</inlineCode>\n      {` - if\nyours is one of them, please make sure it uses `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`http`}</inlineCode>\n      {`.`}</p>\n    <p>{`Log in with the default username and password:`}</p>\n    <pre><code {...{\n        \"className\": \"language-bash\",\n        \"parentName\": \"pre\"\n      }}>{`username: admin\n`}</code></pre>\n    <pre><code {...{\n        \"className\": \"language-bash\",\n        \"parentName\": \"pre\"\n      }}>{`password: admin \n`}</code></pre>\n    <p>{`Congrats! You have successfully installed Superset! Click 'Next' to learn how to connect a database driver.`}</p>\n\n  </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}