{"version":3,"sources":["webpack:///./src/pages/docs/Database Connectors/google-bigquery.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","isMDXComponent"],"mappings":"wPAMaA,G,UAAe,S,wOAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,iBAAQ,CACN,GAAM,mBADR,mBAGA,2EACA,uBAAK,mBAAU,CACX,WAAc,OADb,8BAIL,iaACA,uBAAK,mBAAU,CACX,WAAc,OADb,wEAML,uEACA,uBAAK,mBAAU,CACX,WAAc,OADb,6XAiBL,sFACA,wFACE,gBAAO,CACL,KAAQ,uCACR,WAAc,KAFhB,cADF,uB,sOAUJH,EAAWI,gBAAiB","file":"component---src-pages-docs-database-connectors-google-bigquery-mdx-2d329d43f2338e2d0a80.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/pkd/Desktop/incubator-superset-site/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2 {...{\n      \"id\": \"google-bigquery\"\n    }}>{`Google BigQuery`}</h2>\n    <p>{`The connection string for BigQuery looks like this`}</p>\n    <pre><code {...{\n        \"parentName\": \"pre\"\n      }}>{`bigquery://{project_id}\n`}</code></pre>\n    <p>{`Additionally, you will need to configure authentication via a Service Account. Create your Service Account via the Google Cloud Platform control panel, provide it access to the appropriate BigQuery datasets, and download the JSON configuration file for the service account. In Superset, Add a JSON blob to the “Secure Extra” field in the database configuration page with the following format:`}</p>\n    <pre><code {...{\n        \"parentName\": \"pre\"\n      }}>{`{\n    \"credentials_info\": <contents of credentials JSON file>\n}\n`}</code></pre>\n    <p>{`The resulting file should have this structure:`}</p>\n    <pre><code {...{\n        \"parentName\": \"pre\"\n      }}>{`{\n    \"credentials_info\": {\n        \"type\": \"service_account\",\n        \"project_id\": \"...\",\n        \"private_key_id\": \"...\",\n        \"private_key\": \"...\",\n        \"client_email\": \"...\",\n        \"client_id\": \"...\",\n        \"auth_uri\": \"...\",\n        \"token_uri\": \"...\",\n        \"auth_provider_x509_cert_url\": \"...\",\n        \"client_x509_cert_url\": \"...\",\n    }\n}\n`}</code></pre>\n    <p>{`You should then be able to connect to your BigQuery datasets.`}</p>\n    <p>{`To be able to upload data, e.g. sample data, the Python library `}\n      <a {...{\n        \"href\": \"https://github.com/pydata/pandas-gbq\",\n        \"parentName\": \"p\"\n      }}>{`pandas_gbq`}</a>\n      {` is required.`}</p>\n\n  </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}