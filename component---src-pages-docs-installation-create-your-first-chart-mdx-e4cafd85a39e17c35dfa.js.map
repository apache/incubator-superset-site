{"version":3,"sources":["webpack:///./src/pages/docs/installation/create-your-first-chart.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","src","className","isMDXComponent"],"mappings":"wPAMaA,G,UAAe,S,yOAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,iBAAQ,CACN,GAAM,6BADR,6BAGA,2OACE,gBAAO,CACL,KAAQ,kDACR,WAAc,KAFhB,aADF,wGAMA,uGACA,mBAAKC,IAAI,mCACT,2OACA,sBAEE,iBAAQ,CACN,WAAc,MADhB,6DAKA,iBAAQ,CACN,WAAc,MADhB,8DAKA,iBAAQ,CACN,WAAc,MADhB,+CAKA,iBAAQ,CACN,WAAc,MADhB,sCAKA,iBAAQ,CACN,WAAc,MADhB,8DAKA,iBAAQ,CACN,WAAc,MADhB,sGAKA,iBAAQ,CACN,WAAc,MADhB,uDAKA,iBAAQ,CACN,WAAc,MADhB,eAKF,uJACA,iBAAQ,CACN,GAAM,8BADR,8BAGA,6QACA,yRACA,6GACA,sEACA,mBAAKA,IAAI,qCACT,yGACA,mBAAKA,IAAI,uCACT,mBAAKC,UAAU,mBACb,kFAEF,0GACA,mBAAKD,IAAI,wCACT,qGACA,mBAAKA,IAAI,uCACT,+LACA,mGACA,mBAAKA,IAAI,2CACT,gGACA,mBAAKA,IAAI,wCACT,0PACA,mBAAKA,IAAI,gCACT,6EACA,mBAAKA,IAAI,iCACT,8EACA,mBAAKA,IAAI,kCACT,sMACA,mBAAKA,IAAI,iCACT,kQACA,yF,uOAKJJ,EAAWM,gBAAiB","file":"component---src-pages-docs-installation-create-your-first-chart-mdx-e4cafd85a39e17c35dfa.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/pkd/Desktop/incubator-superset-site/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2 {...{\n      \"id\": \"creating-your-first-chart\"\n    }}>{`Creating Your First Chart`}</h2>\n    <p>{`The most important part of a chart is to understand your data and what you would like to convey. Think about a chart as an answer to your questions. For example, a familiar topic is Covid-19 cases in the U.S. — `}\n      <a {...{\n        \"href\": \"https://preset.io/blog/2020-03-12-corona-virus/\",\n        \"parentName\": \"p\"\n      }}>{`this blog`}</a>\n      {` will help you to use this specific source data and process it to create an effective visualization.`}</p>\n    <p>{`The data available in my datasource for Covid-19 cases includes the following:`}</p>\n    <img src=\"/images/first-chart-fields.png\" />\n    <p>{`You can use this data to formulate questions that you would like to answer — Superset provides the ability to answer those questions in graphical or text form. Some examples of questions based on U.S. data are:`}</p>\n    <ul>\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}>{`What are the top 10 states with the most confirmed cases?`}</li>\n\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}>{`What are the top 10 states with the most confirmed deaths?`}</li>\n\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}>{`Has the number of confirmed cases declined?`}</li>\n\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}>{`Has the number of deaths declined?`}</li>\n\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}>{`Is there a correlation between confirmed cases and deaths?`}</li>\n\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}>{`I would like to see geographical cases reported in my State to see if any are reported in my town.`}</li>\n\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}>{`Can I see the details of the latest reported cases?`}</li>\n\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}>{`And more..`}</li>\n\n    </ul>\n    <p>{`Once you know the questions, then you can categorize them in order to determine the best chart to use to answer the questions.`}</p>\n    <h3 {...{\n      \"id\": \"data-composition-questions\"\n    }}>{`Data Composition Questions`}</h3>\n    <p>{`Let’s take, for example, questions 1 and 2: “What are the 10 states with the most confirmed cases?” and “What are the 10 states with the most confirmed deaths?”  These are composition questions that are designed to show how data is distributed.`}</p>\n    <p>{`In Superset, examples of charts used to answer composition questions include: Bar Chart, Word Cloud, Pie Chart, and Treemaps (just to name a few). Once you build one chart, you can change the visualization type to see which one fits your goal specifically.`}</p>\n    <p>{`Let’s answer the question: What are the top 10 states with the most confirmed cases?`}</p>\n    <p>{`Start by selecting New and then select Chart.`}</p>\n    <img src=\"/images/first-chart-newChart.png\" />\n    <p>{`In the Create a new chart screen, select a data source and a visualization type.`}</p>\n    <img src=\"/images/first-chart-dataSource.png\" />\n    <div className=\"ui info message\">\n      <p>{`This information can be changed in the Chart screen too.`}</p>\n    </div>\n    <p>{`In the Chart screen select things that you would like in your chart. For example:`}</p>\n    <img src=\"/images/first-chart-chartOption.png\" />\n    <p>{`With this information, the chart that Superset will process looks like this:`}</p>\n    <img src=\"/images/first-chart-plainChart.png\" />\n    <p>{`This chart is difficult to read because there are too many values in the series. To reduce the series to a Top 10—as the question suggests—change the Row Limit to 10.`}</p>\n    <p>{`In the Customize tab you can work on your chart’s appearance. For example:`}</p>\n    <img src=\"/images/first-chart-customizeChart.png\" />\n    <p>{`After the above customizations are applied, the chart looks as follows:`}</p>\n    <img src=\"/images/first-chart-barComplete.png\" />\n    <p>{`To try a different visualization type, just change the type and all the common fields will be preserved. For example, change the Visualization Type to Pie Chart — if this is the only change we make, the chart looks like this:`}</p>\n    <img src=\"/images/first-chart-pie.png\" />\n    <p>{`Or you can try a Treemap as your visualization type:`}</p>\n    <img src=\"/images/first-chart-tree.png\" />\n    <p>{`Or simply select a Table for your visualization type:`}</p>\n    <img src=\"/images/first-chart-table.png\" />\n    <p>{`After you find a visualization that satisfies your needs, save the chart by selecting Save at the top of the Chart screen and then select the most appropriate saving option.`}</p>\n    <img src=\"/images/first-chart-save.png\" />\n    <p>{`The Chart Name is the same as the Chart Title, so if you save your chart with a different name it will change the Chart Title accordingly. You have the option to add the chart to an existing dashboard or adding it to a new dashboard.`}</p>\n    <p>{`Click 'Next' to explore how to share a chart or dashboard.`}</p>\n\n  </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}